{"version":3,"file":"js/294-legacy.19a4a1cf.js","mappings":"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","sources":["webpack://avtomaslo/./src/stores/serts.js","webpack://avtomaslo/./src/components-admin/ImageUploader.vue","webpack://avtomaslo/./src/components-admin/ImageUploader.vue?c2c5","webpack://avtomaslo/./src/views-admin/AdminSerts.vue","webpack://avtomaslo/./src/views-admin/AdminSerts.vue?96ba"],"sourcesContent":["import { ref } from \"vue\";\r\nimport config from \"@/config.js\";\r\nimport axios from \"axios\";\r\nimport { defineStore } from \"pinia\";\r\n\r\nexport const useSertsStore = defineStore(\"serts\", () => {\r\n  const serts = ref([]);\r\n\r\n  async function fetchSerts() {\r\n    const response = await axios.get(`${config.API_URL}/serts`);\r\n    serts.value = response.data;\r\n  }\r\n\r\n  async function getSerts() {\r\n    const response = await axios.get(`${config.API_URL}/serts`);\r\n    return response.data;\r\n  }\r\n\r\n  async function fetchSert(id) {\r\n    const response = await axios.get(`${config.API_URL}/serts/${id}`);\r\n    return response.data;\r\n  }\r\n\r\n  function updateSertImage(id, imageUrl) {\r\n    const sert = serts.value.find((sert) => sert._id == id);\r\n    sert.imageUrl = imageUrl;\r\n    sert.updated = true;\r\n  }\r\n\r\n  async function deleteSert(id) {\r\n    try {\r\n      const token = localStorage.getItem(\"token\")\r\n        ? localStorage.getItem(\"token\")\r\n        : \"\";\r\n      const headers = {\r\n        Authorization: `Bearer ${token}`,\r\n      };\r\n      const response = await axios.delete(`${config.API_URL}/serts/${id}`, {\r\n        headers,\r\n      });\r\n      const filteredSerts = serts.value.filter((sert) => sert._id != id);\r\n      serts.value = filteredSerts;\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(\"Ошибка\");\r\n    }\r\n  }\r\n\r\n  async function createSert(sert) {\r\n    try {\r\n      const token = localStorage.getItem(\"token\")\r\n        ? localStorage.getItem(\"token\")\r\n        : \"\";\r\n      const headers = {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      };\r\n\r\n      const response = await axios.post(\r\n        `${config.API_URL}/serts`,\r\n        JSON.stringify(sert),\r\n        { headers }\r\n      );\r\n      serts.value.push(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(\"Ошибка\");\r\n    }\r\n  }\r\n\r\n  async function updateSert(id, sert) {\r\n    try {\r\n      const token = localStorage.getItem(\"token\")\r\n        ? localStorage.getItem(\"token\")\r\n        : \"\";\r\n      const headers = {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      };\r\n\r\n      const response = await axios.put(\r\n        `${config.API_URL}/serts/${id}`,\r\n        JSON.stringify(sert),\r\n        { headers }\r\n      );\r\n      sert.updated = false;\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(\"Ошибка\");\r\n    }\r\n  }\r\n\r\n  return {\r\n    serts,\r\n    fetchSerts,\r\n    deleteSert,\r\n    createSert,\r\n    fetchSert,\r\n    updateSert,\r\n    updateSertImage,\r\n    getSerts,\r\n  };\r\n});\r\n","<script>\r\nimport { onMounted, onUpdated, ref } from \"vue\";\r\nimport axios from \"axios\";\r\nimport config from \"@/config\";\r\n\r\nexport default {\r\n  props: [\"imageUrlProp\", \"extraInfo\", \"imageMaxWidth\", \"wrapSize\"],\r\n  emits: [\"updateImage\"],\r\n  setup(props, context) {\r\n    const fileInput = ref(null);\r\n    const imageUrl = ref(\"\");\r\n\r\n    async function handleFileInputChange() {\r\n      if (fileInput.value.files[0]) {\r\n        uploadFile();\r\n      }\r\n    }\r\n\r\n    async function uploadFile() {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", fileInput.value.files[0]);\r\n      const token = localStorage.getItem(\"token\")\r\n        ? localStorage.getItem(\"token\")\r\n        : \"\";\r\n      const headers = {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${token}`,\r\n      };\r\n      const response = await axios.post(`${config.API_URL}/upload`, formData, {\r\n        headers,\r\n      });\r\n      imageUrl.value = \"/uploads/\" + response.data.filename;\r\n      context.emit(\r\n        \"updateImage\",\r\n        \"/uploads/\" + response.data.filename,\r\n        props.extraInfo\r\n      );\r\n    }\r\n\r\n    onMounted(() => {\r\n      imageUrl.value = props.imageUrlProp;\r\n    });\r\n\r\n    onUpdated(() => {\r\n      imageUrl.value = props.imageUrlProp;\r\n    });\r\n\r\n    return {\r\n      handleFileInputChange,\r\n      fileInput,\r\n      imageUrl,\r\n      config,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"input-group\">\r\n    <label\r\n      class=\"image-wrap\"\r\n      :style=\"`width: ${wrapSize}px; height: ${wrapSize}px`\"\r\n    >\r\n      <img\r\n        v-if=\"imageUrl\"\r\n        :src=\"config.API_URL + imageUrl\"\r\n        :style=\"`max-width: ${imageMaxWidth}px; max-height: ${imageMaxWidth}px;`\"\r\n        class=\"image-wrap-img\"\r\n        alt=\"\"\r\n      />\r\n      <div class=\"image-overlay\">\r\n        <span>Нажмите, чтобы загрузить или обновить изображение</span>\r\n      </div>\r\n      <span class=\"image-wrap-text\" v-if=\"!imageUrl\"\r\n        >Нажмите, чтобы загрузить или обновить изображение</span\r\n      >\r\n      <input type=\"file\" ref=\"fileInput\" @change=\"handleFileInputChange\" />\r\n    </label>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\ninput[type=\"file\"] {\r\n  display: none;\r\n}\r\n.image-wrap {\r\n  width: 300px;\r\n  height: 300px;\r\n  border: 1px solid lightgray;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  position: relative;\r\n}\r\n.image-overlay {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  background: rgba(0, 0, 0, 0.6);\r\n  color: white;\r\n  z-index: 3;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.image-wrap-text {\r\n  transition-duration: 0.2s;\r\n}\r\n.image-wrap:hover .image-wrap-text {\r\n  visibility: hidden;\r\n  opacity: 0;\r\n}\r\n.image-wrap:hover .image-overlay {\r\n  opacity: 1;\r\n  visibility: visible;\r\n}\r\n.image-wrap-img {\r\n  max-width: 170px;\r\n  max-height: 170px;\r\n}\r\n</style>\r\n","import { render } from \"./ImageUploader.vue?vue&type=template&id=f8d050ea&scoped=true\"\nimport script from \"./ImageUploader.vue?vue&type=script&lang=js\"\nexport * from \"./ImageUploader.vue?vue&type=script&lang=js\"\n\nimport \"./ImageUploader.vue?vue&type=style&index=0&id=f8d050ea&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\Grigoriy\\\\Desktop\\\\avtomaslo\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-f8d050ea\"]])\n\nexport default __exports__","<script setup>\r\nimport ImageUploader from \"@/components-admin/ImageUploader.vue\";\r\nimport { useSertsStore } from \"@/stores/serts\";\r\nimport { ref, onMounted } from \"vue\";\r\n\r\nconst sertStore = useSertsStore();\r\n\r\nconst newSert = ref({\r\n  imageUrl: \"\",\r\n});\r\n\r\nfunction updateImage(value, extraInfo) {\r\n  if (extraInfo.id == \"new\") {\r\n    newSert.value.imageUrl = value;\r\n    return;\r\n  }\r\n  sertStore.updateSertImage(extraInfo.id, value);\r\n}\r\n\r\nasync function handleUpdate(id, sert) {\r\n  await sertStore.updateSert(id, sert);\r\n  alert(\"Успешно\");\r\n}\r\n\r\nasync function handleDelete(id) {\r\n  if (confirm(\"Удалить категорию?\")) {\r\n    await sertStore.deleteSert(id);\r\n  }\r\n}\r\n\r\nasync function handleAdd(sert) {\r\n  await sertStore.createSert(sert);\r\n  newSert.value.imageUrl = \"\";\r\n}\r\n\r\nonMounted(async () => {\r\n  await sertStore.fetchSerts();\r\n});\r\n</script>\r\n\r\n<template>\r\n  <div class=\"container\">\r\n    <h3>Сертификаты</h3>\r\n    <div class=\"serts\">\r\n      <div class=\"sert__item\" v-for=\"sert in sertStore.serts\">\r\n        <ImageUploader\r\n          :imageUrlProp=\"sert.imageUrl\"\r\n          :imageMaxWidth=\"300\"\r\n          :wrapSize=\"300\"\r\n          :extraInfo=\"{ id: sert._id }\"\r\n          @updateImage=\"updateImage\"\r\n        />\r\n        <button\r\n          v-if=\"sert.updated\"\r\n          style=\"margin-right: 10px\"\r\n          class=\"btn\"\r\n          @click=\"handleUpdate(sert._id, sert)\"\r\n          :class=\"{\r\n            'btn-secondary': sert.updated,\r\n          }\"\r\n        >\r\n          Сохранить\r\n        </button>\r\n        <button @click=\"handleDelete(sert._id)\" class=\"btn btn-danger\">\r\n          Удалить\r\n        </button>\r\n      </div>\r\n      <div class=\"sert__item\">\r\n        <ImageUploader\r\n          :imageUrlProp=\"newSert.imageUrl\"\r\n          :imageMaxWidth=\"300\"\r\n          :wrapSize=\"300\"\r\n          :extraInfo=\"{ id: 'new' }\"\r\n          @updateImage=\"updateImage\"\r\n        />\r\n        <button @click=\"handleAdd(newSert)\" class=\"btn btn-secondary\">\r\n          Добавить\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped src=\"../assets/libs/bootstrap.min.css\"></style>\r\n<style scoped>\r\nh3 {\r\n  margin-bottom: 20px;\r\n}\r\n.sert__item .btn {\r\n  margin-top: 10px;\r\n}\r\n.serts {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n}\r\n</style>\r\n","import script from \"./AdminSerts.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AdminSerts.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"../assets/libs/bootstrap.min.css?vue&type=style&index=0&id=c886c6d0&scoped=true&lang=css\"\nimport \"./AdminSerts.vue?vue&type=style&index=1&id=c886c6d0&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\Grigoriy\\\\Desktop\\\\avtomaslo\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c886c6d0\"]])\n\nexport default __exports__"],"names":["useSertsStore","defineStore","serts","ref","fetchSerts","axios","config","response","value","data","getSerts","fetchSert","id","updateSertImage","imageUrl","sert","find","_id","updated","deleteSert","token","localStorage","getItem","headers","Authorization","filteredSerts","filter","console","log","alert","createSert","JSON","stringify","push","updateSert","class","_createElementVNode","_createElementBlock","_hoisted_1","style","$props","$setup","src","API_URL","alt","_hoisted_3","_hoisted_4","type","onChange","props","emits","setup","context","fileInput","handleFileInputChange","files","uploadFile","formData","FormData","append","filename","emit","extraInfo","onMounted","imageUrlProp","onUpdated","__exports__","render","sertStore","newSert","updateImage","handleUpdate","handleDelete","confirm","handleAdd"],"sourceRoot":""}